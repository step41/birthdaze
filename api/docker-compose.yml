version: '3.7'
services:
  
  #NGINX Service
  api-nginx:
    build:
      context: ./
      dockerfile: ./docker/nginx.dockerfile
    image: nginx:latest
    container_name: api-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - api-php
    networks:
      - api-network

  #PHP Service
  api-php:
    build:
      context: ./
      dockerfile: ./docker/php.dockerfile
    image: nanoninja/php-fpm:8.1
    container_name: api-php
    restart: always
    expose:
      - 9000
    ports:
      - "9000:9000"
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php.conf:/etc/php-fpm.d/www.conf
    networks:
      - api-network

  #Mongo Database Service
  api-mongo-db:
    image: mongo:latest
    container_name: api-mongo-db
    hostname: api-mongo-db
    volumes:
      - "api-data:/data/db:rw"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    restart: always
    command: mongod --port ${DB_PORT} --auth
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - api-network

  #Mongo Express Service
  api-mongo-xp:
    image: "mongo-express:latest"
    container_name: api-mongo-xp
    volumes:
      - "api-data:/data/db:rw"
    environment:
      - ME_CONFIG_MONGODB_SERVER=api-mongo-db
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASS}
      - ME_CONFIG_BASICAUTH_USERNAME=${BA_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${BA_PASS}
    restart: always
    depends_on:
      - api-mongo-db    
    ports:
      - "8081:8081"
    links:
      - api-mongo-db:api-mongo-db
    networks:
      - api-network


#Docker Networks
networks:
  api-network:
    driver: bridge

#Volumes
volumes:
  api-data:

